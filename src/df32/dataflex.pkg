//-------------------------------------------------------------------------
// posix regex extensions
//
// Copyright (c) 2015, glyn@8kb.co.uk
// Author: Glyn Astill <glyn@8kb.co.uk>
//
//-------------------------------------------------------------------------
//

use dll

Define max_dfregex_buffer						for 16384
Define errors_to_stderr							for 0

external_function RegexpMatch "RegexpMatch" dfregex.dll pointer str pointer pattern pointer flags integer errors returns integer
external_function RegexpMatches "RegexpMatches" dfregex.dll pointer str pointer pattern pointer flags pointer out pointer out_len integer errors  returns integer
external_function RegexpReplace "RegexpReplace" dfregex.dll pointer str pointer pattern pointer replacement pointer flags pointer out pointer out_len integer errors returns integer

//Purely check if a regex expression produces match in the input string
// Returns 1 on match, 0 on no match
//	  E.g
//    move (regexp_match('the quick brown fox jumps over the lazy dog.', 'fox', 'g'))
function regexp_match global string str string pattern string flags returns integer
	local integer l_iReturn
	local pointer l_pStr l_pPattern l_pFlags
	
	getaddress of str to l_pStr
	getaddress of pattern to l_pPattern
	getaddress of flags to l_pFlags
	
	move (RegexpMatch(l_pStr, l_pPattern, l_pFlags, errors_to_stderr)) to l_iReturn
	
	function_return l_iReturn
end_function   

//Return a string containing all regex matches in the input string
//    E.g
//    move (regexp_matches('the quick brown fox jumps over the la\{zy d"og.', 'fox|(the)|brown|(la\\\{zy)|(d"og)', 'g')) to myString
function regexp_matches global string str string pattern string flags returns string
	local integer l_iReturn
	local pointer l_pStr l_pPattern l_pFlags l_pOut
	local string l_sOut l_sReturn
	
	move "" to l_sReturn
	getaddress of str to l_pStr
	getaddress of pattern to l_pPattern
	getaddress of flags to l_pFlags
	zerostring max_dfregex_buffer to l_sOut
	getaddress of l_sOut to l_pOut
	
	move (RegexpMatches(l_pStr, l_pPattern, l_pFlags, l_pOut, max_dfregex_buffer, errors_to_stderr)) to l_iReturn
	
	if (l_iReturn = 0);
		move (cstring(l_sOut)) To l_sReturn
	else begin
		if (l_iReturn = -1);
			error 999997 "Regex output buffer too small"
		if (l_iReturn = -2);
            error 999998 "Regex compilation failure"
		move "" to l_sReturn
	end
	
	function_return l_sReturn
end_function 

//Perform a replacement on the input string all matches with the given pattern
//    E.g.
//    move (regexp_replace('22 quick brown foxes jump over the 44 lazy dogs.', '([0-9]*).* (foxes) .* ([0-9]*) .* (dogs).*', 'SELECT build_data(\1,\2), build_data(\3,\4);', 'g')) to myString
function regexp_replace global string str string pattern string replacement string flags returns string
	local integer l_iReturn
	local pointer l_pStr l_pPattern l_pFlags l_pReplacement l_pOut
	local string l_sOut l_sReturn
	
	move "" to l_sReturn
	getaddress of str to l_pStr
	getaddress of pattern to l_pPattern
	getaddress of flags to l_pFlags
	getaddress of replacement to l_pReplacement
	zerostring max_dfregex_buffer to l_sOut
	getaddress of l_sOut to l_pOut
	
	move (RegexpReplace(l_pStr, l_pPattern, l_pReplacement, l_pFlags, l_pOut, max_dfregex_buffer, errors_to_stderr)) to l_iReturn
	
	if (l_iReturn = 0);
		move (cstring(l_sOut)) To l_sReturn
	else begin
		if (l_iReturn = -1);
			error 999997 "Regex output buffer too small"	
		if (l_iReturn = -2);
			error 999998 "Regex compilation failure"			
		move "" to l_sReturn
	end
			
	function_return l_sReturn
end_function 